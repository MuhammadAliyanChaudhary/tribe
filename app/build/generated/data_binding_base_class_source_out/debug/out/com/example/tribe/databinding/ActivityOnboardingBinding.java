// Generated by view binder compiler. Do not edit!
package com.example.tribe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import at.markushi.ui.CircleButton;
import com.example.tribe.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityOnboardingBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final FrameLayout btnNex;

  @NonNull
  public final CircleButton btnNext;

  @NonNull
  public final Button btnSkip;

  @NonNull
  public final LinearLayout indicatorLayout;

  @NonNull
  public final ViewPager slideViewPager;

  private ActivityOnboardingBinding(@NonNull LinearLayout rootView, @NonNull FrameLayout btnNex,
      @NonNull CircleButton btnNext, @NonNull Button btnSkip, @NonNull LinearLayout indicatorLayout,
      @NonNull ViewPager slideViewPager) {
    this.rootView = rootView;
    this.btnNex = btnNex;
    this.btnNext = btnNext;
    this.btnSkip = btnSkip;
    this.indicatorLayout = indicatorLayout;
    this.slideViewPager = slideViewPager;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityOnboardingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityOnboardingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_onboarding, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityOnboardingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_nex;
      FrameLayout btnNex = ViewBindings.findChildViewById(rootView, id);
      if (btnNex == null) {
        break missingId;
      }

      id = R.id.btn_next;
      CircleButton btnNext = ViewBindings.findChildViewById(rootView, id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.btn_skip;
      Button btnSkip = ViewBindings.findChildViewById(rootView, id);
      if (btnSkip == null) {
        break missingId;
      }

      id = R.id.indicatorLayout;
      LinearLayout indicatorLayout = ViewBindings.findChildViewById(rootView, id);
      if (indicatorLayout == null) {
        break missingId;
      }

      id = R.id.slideViewPager;
      ViewPager slideViewPager = ViewBindings.findChildViewById(rootView, id);
      if (slideViewPager == null) {
        break missingId;
      }

      return new ActivityOnboardingBinding((LinearLayout) rootView, btnNex, btnNext, btnSkip,
          indicatorLayout, slideViewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
