// Generated by view binder compiler. Do not edit!
package com.example.tribe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tribe.R;
import devs.mulham.horizontalcalendar.HorizontalCalendarView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCalendarBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton addEvents;

  @NonNull
  public final HorizontalCalendarView calendarView;

  @NonNull
  public final ConstraintLayout constraintLayout2;

  @NonNull
  public final RecyclerView eventsRec;

  @NonNull
  public final TextView textView;

  private FragmentCalendarBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton addEvents, @NonNull HorizontalCalendarView calendarView,
      @NonNull ConstraintLayout constraintLayout2, @NonNull RecyclerView eventsRec,
      @NonNull TextView textView) {
    this.rootView = rootView;
    this.addEvents = addEvents;
    this.calendarView = calendarView;
    this.constraintLayout2 = constraintLayout2;
    this.eventsRec = eventsRec;
    this.textView = textView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCalendarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCalendarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_calendar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCalendarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addEvents;
      ImageButton addEvents = ViewBindings.findChildViewById(rootView, id);
      if (addEvents == null) {
        break missingId;
      }

      id = R.id.calendarView;
      HorizontalCalendarView calendarView = ViewBindings.findChildViewById(rootView, id);
      if (calendarView == null) {
        break missingId;
      }

      id = R.id.constraintLayout2;
      ConstraintLayout constraintLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout2 == null) {
        break missingId;
      }

      id = R.id.events_rec;
      RecyclerView eventsRec = ViewBindings.findChildViewById(rootView, id);
      if (eventsRec == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      return new FragmentCalendarBinding((ConstraintLayout) rootView, addEvents, calendarView,
          constraintLayout2, eventsRec, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
