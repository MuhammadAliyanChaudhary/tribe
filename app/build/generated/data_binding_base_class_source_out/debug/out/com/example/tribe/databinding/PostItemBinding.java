// Generated by view binder compiler. Do not edit!
package com.example.tribe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tribe.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PostItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView comment;

  @NonNull
  public final TextView comments;

  @NonNull
  public final TextView description;

  @NonNull
  public final ImageView disLike;

  @NonNull
  public final CircleImageView imageProfile;

  @NonNull
  public final ImageView like;

  @NonNull
  public final TextView likes;

  @NonNull
  public final ImageView more;

  @NonNull
  public final TextView publisher;

  @NonNull
  public final TextView username;

  private PostItemBinding(@NonNull RelativeLayout rootView, @NonNull ImageView comment,
      @NonNull TextView comments, @NonNull TextView description, @NonNull ImageView disLike,
      @NonNull CircleImageView imageProfile, @NonNull ImageView like, @NonNull TextView likes,
      @NonNull ImageView more, @NonNull TextView publisher, @NonNull TextView username) {
    this.rootView = rootView;
    this.comment = comment;
    this.comments = comments;
    this.description = description;
    this.disLike = disLike;
    this.imageProfile = imageProfile;
    this.like = like;
    this.likes = likes;
    this.more = more;
    this.publisher = publisher;
    this.username = username;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PostItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PostItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.post_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PostItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.comment;
      ImageView comment = ViewBindings.findChildViewById(rootView, id);
      if (comment == null) {
        break missingId;
      }

      id = R.id.comments;
      TextView comments = ViewBindings.findChildViewById(rootView, id);
      if (comments == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.dis_like;
      ImageView disLike = ViewBindings.findChildViewById(rootView, id);
      if (disLike == null) {
        break missingId;
      }

      id = R.id.image_profile;
      CircleImageView imageProfile = ViewBindings.findChildViewById(rootView, id);
      if (imageProfile == null) {
        break missingId;
      }

      id = R.id.like;
      ImageView like = ViewBindings.findChildViewById(rootView, id);
      if (like == null) {
        break missingId;
      }

      id = R.id.likes;
      TextView likes = ViewBindings.findChildViewById(rootView, id);
      if (likes == null) {
        break missingId;
      }

      id = R.id.more;
      ImageView more = ViewBindings.findChildViewById(rootView, id);
      if (more == null) {
        break missingId;
      }

      id = R.id.publisher;
      TextView publisher = ViewBindings.findChildViewById(rootView, id);
      if (publisher == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new PostItemBinding((RelativeLayout) rootView, comment, comments, description, disLike,
          imageProfile, like, likes, more, publisher, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
